@model AbbigliamentoECommerce.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Inserimento Prodotto</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, htmlAttributes: new { @class = "form", enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-md-3">

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProductName)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.ProductName,  new
                        {
                            @class = "form-control"
                        })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.TextAreaFor(model => model.Description,  new
                        {
                            @class = "form-control"
                        })

                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Quantity)
                </dt>

                <dd>
                    @Html.EditorFor(model => model.Quantity,  new
               {
                   @class = "form-control"
               })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Price)

                </dt>
                <dd>
                    @Html.EditorFor(model => model.Price)
                    @Html.ValidationMessageFor(model => model.Price, "", new
                   {
                       @class = "text-danger"
                   })
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Category)
                </dt>

                <dd>
                    @Html.DropDownListFor(model => model.Category,
                                        new SelectList(Model.Categories.Select(x => new { Value = x.Description, Text = x.Description }),
        "Value",
        "Text", Model.Category),
                                        "Seleziona Categoria")
                    @Html.ValidationMessageFor(model => model.Category, "", new
                   {
                       @class = "text-danger"
                   })
                </dd>



            </dl>
        </div>
        <div class="col-md-3"></div>
        <div class="col-md-3">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Model)
                </dt>

                <dd>
                    @Html.DropDownListFor(model => model.Model,
                                      new SelectList(Model.Models.Select(x => new { Value = x.Description, Text = x.Description }),
        "Value",
        "Text", Model.Model),
                                      "Seleziona Modello")
                    @Html.ValidationMessageFor(model => model.Model, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Headmoney)
                </dt>

                <dd>
                    @Html.DropDownListFor(model => model.Headmoney,
                                     new SelectList(Model.Headmoneies.Select(x => new { Value = x.Description, Text = x.Description }),
        "Value",
        "Text", Model.Headmoney),
                                     "Seleziona Taglia")
                    @Html.ValidationMessageFor(model => model.Headmoney, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Color)
                </dt>

                <dd>
                    @Html.DropDownListFor(model => model.Color,
                                     new SelectList(Model.Colors.Select(x => new { Value = x.Description, Text = x.Description }),
        "Value",
        "Text", Model.Color),
                                     "Seleziona Colore")
                    @Html.ValidationMessageFor(model => model.Color, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>
                <dt>

                    @Html.DisplayNameFor(model => model.Brand)
                </dt>

                <dd>
                    @Html.DropDownListFor(model => model.Brand,
                   new SelectList(
        Model.Brands.Select(x => new { Value = x.Description, Text = x.Description }),
        "Value",
        "Text", Model.Brand),"Seleziona Marca")
                    @*@Html.DropDownListFor(model => model.Brand,
                        new SelectList(Model.Brands, "Id", "Description"),
                        "Seleziona Marca")*@
                    @Html.ValidationMessageFor(model => model.Brand, "", new
                    {
                        @class = "text-danger"
                    })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Image)
                </dt>

                <dd>
                      <input type="file" name="ImageFile" required/>
               
                    @*@Html.TextBoxFor(model => model.Image, new { type = "file" })*@
                    @*@Html.EditorFor(model => model.ImageFile, new { htmlAttributes = new { type = "file" } })

                    @Html.ValidationMessageFor(model => model.ImageFile, null, new
                    {
                        @class = "text-danger"
                    })*@
                </dd>


            </dl>
        </div>
    </div>
    <p>
        
        <div class="form-group"> <input type="submit" value="Salva" class="pull-right" /> </div>
    </p>
}

